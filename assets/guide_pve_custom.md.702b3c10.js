import{_ as s,v as a,b as n,R as o}from"./chunks/framework.70afa331.js";const D=JSON.parse('{"title":"一些自定义脚本","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/pve_custom.md","filePath":"guide/pve_custom.md","lastUpdated":1704014958000}'),p={name:"guide/pve_custom.md"},e=o(`<h1 id="一些自定义脚本" tabindex="-1">一些自定义脚本 <a class="header-anchor" href="#一些自定义脚本" aria-label="Permalink to &quot;一些自定义脚本&quot;">​</a></h1><p>每个脚本可能有对应的系统要求，自行查看</p><h2 id="在非debian系统上安装-proxmox-ve-7" tabindex="-1">在非Debian系统上安装 Proxmox VE 7 <a class="header-anchor" href="#在非debian系统上安装-proxmox-ve-7" aria-label="Permalink to &quot;在非Debian系统上安装 Proxmox VE 7&quot;">​</a></h2><p>本机硬件配置的最低要求同先前正常安装的要求一致</p><p>需要先安装docker</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">curl -sSL https://get.docker.com/ | sh</span></span>
<span class="line"><span style="color:#A6ACCD;">curl -L &quot;https://github.com/docker/compose/releases/latest/download/docker-compose-linux-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span></span>
<span class="line"><span style="color:#A6ACCD;">chmod +x /usr/local/bin/docker-compose</span></span>
<span class="line"><span style="color:#A6ACCD;">docker-compose --version</span></span></code></pre></div><p>然后使用<code>uname -m</code>查询架构，使用对应架构的命令</p><p>开设出的PVE面板信息为：</p><p>登录用户名和密码都是<code>root</code>，登录后务必使用web的SSH更改密码以免被爆破</p><p>用宿主机SSH时务必登录对应<code>https://IPV4地址:8006</code>在web面板上使用SSH，不要使用宿主机的22端口操控PVE</p><p>因为web面板上的SSH是在Docker内的，所以不支持后续的一键配置，请自行配置网关等进行使用</p><p>X86架构</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-idt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">host</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--privileged \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--name </span><span style="color:#C3E88D;">pve</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--add-host </span><span style="color:#C3E88D;">pve:10.13.14.101</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--hostname </span><span style="color:#C3E88D;">pve</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">spiritlhl/pve:7_x86_64</span></span></code></pre></div><p>ARM架构</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-idt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">host</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--privileged \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--name </span><span style="color:#C3E88D;">pve</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--add-host </span><span style="color:#C3E88D;">pve:10.13.14.101</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--hostname </span><span style="color:#C3E88D;">pve</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">spiritlhl/pve:7_aarch64</span></span></code></pre></div><p>开设出的面板实际是开设在容器内的，但网络已使用host模式，PVE的端口约等于就使用的宿主机的端口</p><p>有许多错误需要修复，欢迎PR解决问题，实测在Ubuntu系统的宿主机上安装<code>Proxmox VE</code>的面板成功，解决了通过网络安装<code>Proxmox VE</code>只能使用Debian系统做宿主机的问题</p>`,17),l=[e];function t(c,r,C,i,d,A){return a(),n("div",null,l)}const h=s(p,[["render",t]]);export{D as __pageData,h as default};
