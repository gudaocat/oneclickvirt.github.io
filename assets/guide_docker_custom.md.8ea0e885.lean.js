import{_ as e,v as s,b as o,R as a}from"./chunks/framework.70afa331.js";const m=JSON.parse('{"title":"Script for One-Click Installation of Certain Containers Using Docker","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/docker_custom.md","filePath":"guide/docker_custom.md","lastUpdated":1692193924000}'),n={name:"guide/docker_custom.md"},t=a(`<h1 id="script-for-one-click-installation-of-certain-containers-using-docker" tabindex="-1">Script for One-Click Installation of Certain Containers Using Docker <a class="header-anchor" href="#script-for-one-click-installation-of-certain-containers-using-docker" aria-label="Permalink to &quot;Script for One-Click Installation of Certain Containers Using Docker&quot;">​</a></h1><p>Each container has corresponding configuration requirements, please refer to them accordingly.</p><h2 id="one-click-setup-of-android-system-container" tabindex="-1">One-Click Setup of Android System Container <a class="header-anchor" href="#one-click-setup-of-android-system-container" aria-label="Permalink to &quot;One-Click Setup of Android System Container&quot;">​</a></h2><ul><li>Customizable Android version</li><li>Automatically creates a validated web website</li><li>Automatically performs nginx installation and reverse proxy configuration, with the option to bind a domain name or use port 80 by default if no binding is selected</li><li>No need to consider whether the host machine supports nested virtualization</li><li>Supports both x86_64 and ARM architectures</li></ul><p><strong>The host machine must have a configuration of at least 1 core, 2GB memory, and 15GB disk space, otherwise the setup may cause the host machine to freeze.</strong></p><p>The newer the Android version, the larger the space it occupies. The above configuration requirements are for the minimum Android version configuration (personally tested up to the &#39;12.0.0-latest&#39; tag, higher versions resulted in a blank screen, please test which version works for you).</p><p><strong>Setup:</strong></p><p>International</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://raw.githubusercontent.com/spiritLHLS/docker/main/scripts/create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span></span></code></pre></div><p>China</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://ghproxy.com/https://raw.githubusercontent.com/spiritLHLS/docker/main/scripts/create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span></span></code></pre></div><p>After executing the command, follow the prompts to input the required information. Please note that when selecting the version, input the corresponding number according to the option&#39;s numeric order. After the installation is complete, open the &quot;Local IPV4+80 port&quot; to log in.</p><p>If you need to retrieve the generated Android information and web login details, execute the command <code>cat /root/android_info</code> to query the information.</p><p>Default username: <code>onea</code></p><p>Default password: <code>oneclick</code></p><p>For remote desktop, click on <code>H264 Converter</code> to initiate the redirection.</p><p><strong>Currently, only the generation of one Android container is supported. Do not generate duplicates. If you need to replace the version, please execute the subsequent command to delete before reestablishing.</strong></p><p><strong>Deletion</strong></p><ul><li>Delete container</li><li>Delete corresponding container image</li><li>Delete configuration file</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker rm -f android</span></span>
<span class="line"><span style="color:#A6ACCD;">docker rm -f scrcpy_web</span></span>
<span class="line"><span style="color:#A6ACCD;">docker rmi $(docker images | grep &quot;redroid&quot; | awk &#39;{print $3}&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">rm -rf /etc/nginx/sites-enabled/reverse-proxy</span></span>
<span class="line"><span style="color:#A6ACCD;">rm -rf /etc/nginx/sites-available/reverse-proxy</span></span>
<span class="line"><span style="color:#A6ACCD;">rm -rf /etc/nginx/passwd_scrcpy_web</span></span>
<span class="line"><span style="color:#A6ACCD;">rm -rf /root/android_info</span></span></code></pre></div><h2 id="one-click-creation-of-windows-system-containers" tabindex="-1">One-Click Creation of Windows System Containers <a class="header-anchor" href="#one-click-creation-of-windows-system-containers" aria-label="Permalink to &quot;One-Click Creation of Windows System Containers&quot;">​</a></h2><ul><li>Share all resources of the host machine. Based on Docker, it only occupies the size of the system, suitable for multiple instances.</li><li>Share IP addresses. NAT mapping is implemented using Docker, allowing the choice of mapping to the external network or internal network only.</li><li>The configured Windows system is set to defaultly utilize up to 1 core, 2GB of memory, and 50GB of hard disk space. Actual usage may vary based on usage patterns.</li><li>No need for iptables for NAT mapping. Port mappings are automatically deleted when containers are removed, facilitating maintenance.</li><li>It&#39;s important to consider whether the host machine supports nested virtualization.</li></ul><p><strong>The host machine needs to support nested virtualization and currently only supports systems based on the X86_64 architecture. There are no ARM machines available to compile corresponding images.</strong></p><p>Execute.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">egrep -c &#39;(vmx|svm)&#39; /proc/cpuinfo</span></span></code></pre></div><p>The result needs to be greater than or equal to 1, it cannot be 0.</p><p>Then, you need to first configure Docker to start with v1 version cgroup.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sed -i &#39;s/GRUB_CMDLINE_LINUX=&quot;\\(.*\\)&quot;/GRUB_CMDLINE_LINUX=&quot;\\1 systemd.unified_cgroup_hierarchy=0&quot;/&#39; /etc/default/grub</span></span>
<span class="line"><span style="color:#A6ACCD;">update-grub</span></span>
<span class="line"><span style="color:#A6ACCD;">ls</span></span></code></pre></div><p>If there are no errors during execution, run the command <code>reboot</code> to restart the system for the settings to take effect.</p><p><strong>Supported Images</strong></p><p>Self-built image in use: <a href="https://hub.docker.com/r/spiritlhl/wds" target="_blank" rel="noreferrer">https://hub.docker.com/r/spiritlhl/wds</a></p><table><thead><tr><th>Image Name</th><th>Image Size</th></tr></thead><tbody><tr><td>10</td><td>20G</td></tr><tr><td>2022</td><td>17.5G</td></tr><tr><td>2019</td><td>17G</td></tr></tbody></table><p>The size of the created container will be slightly larger than the image size, but not by much.</p><p><strong>Download Script</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">curl -L https://raw.githubusercontent.com/spiritLHLS/docker/main/scripts/onewindows.sh -o onewindows.sh &amp;&amp; chmod +x onewindows.sh</span></span></code></pre></div><p><strong>Usage Instructions</strong></p><p>Make sure to execute in the <code>screen</code> window before opening to avoid SSH connection drop due to long-term connections.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">./onewindows.sh system_version RDP_port External_mapping(Y/N, leave empty for default N)</span></span></code></pre></div><p>Before opening, confirm that the host machine has a disk size at least twice the size of the image plus 10GB, as Docker first needs to pull the image locally before creating it.</p><p>During the creation process, the peak disk usage is <code>host_system + image_size + container_size</code>.</p><p>For example, to open the Windows 2019 container with the lowest occupancy, mapping external RDP port to 13389, and enabling external mapping (mapping to your server&#39;s public IPv4 address):</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">./onewindows.sh 2019 13389 Y</span></span></code></pre></div><p>The default usernames after opening are <code>Administrator</code> and <code>vagrant</code>.</p><p>The default password is <code>vagrant</code>.</p><p>If you choose to map an external port, make sure to change the corresponding account&#39;s password (both accounts might exist, try both) after logging in, to prevent potential brute-force attacks.</p><p><strong>Deletion</strong></p><p>To delete corresponding images and containers, first execute <code>docker ps -a</code> and <code>docker images</code> to find the ID of the image with the name <code>spiritlhl/wds</code>, then use:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker rm -f container_ID</span></span>
<span class="line"><span style="color:#A6ACCD;">docker rmi image_ID</span></span></code></pre></div><p>After deletion, you can open containers for different versions of Windows.</p><h2 id="one-click-setup-of-firefox-browser-container" tabindex="-1">One-Click Setup of Firefox Browser Container <a class="header-anchor" href="#one-click-setup-of-firefox-browser-container" aria-label="Permalink to &quot;One-Click Setup of Firefox Browser Container&quot;">​</a></h2><ul><li>Crash auto-restart is set.</li><li>Chinese fonts are included.</li><li>Web password is provided.</li><li>Optional VNC port activation (default is off).</li><li>No need to consider nested virtualization support or server architecture.</li></ul><p><strong>The host machine needs at least 1 core, 1GB RAM, and 5GB disk. The container size will occupy at least 1GB of disk space.</strong></p><p><strong>Setup</strong></p><p>After setup, the default password is <code>oneclick</code>.</p><p>The default web port is <code>3003</code>. After setup, open <code>localhost_IPv4:port</code> in a browser.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">curl -L https://raw.githubusercontent.com/spiritLHLS/docker/main/scripts/onefirefox.sh -o onefirefox.sh &amp;&amp; chmod +x onefirefox.sh &amp;&amp; bash onefirefox.sh</span></span></code></pre></div><p><strong>Deletion</strong></p><p>Execute:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker ps -a</span></span></code></pre></div><p>Find containers with a name prefix of <code>firefox</code>, record the container ID, then use:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker rm -f container_ID</span></span></code></pre></div><p>After deleting all associated containers, you can use <code>docker rmi jlesage/firefox</code> to delete the corresponding image.</p><h2 id="one-click-installation-of-guacamole" tabindex="-1">One-Click Installation of Guacamole <a class="header-anchor" href="#one-click-installation-of-guacamole" aria-label="Permalink to &quot;One-Click Installation of Guacamole&quot;">​</a></h2><p>A web-based tool to connect to servers using protocols like SSH or RDP.</p><p>URL: <code>http://your_IPV4_address:80/guacamole</code></p><p>Default user: <code>guacadmin</code></p><p>Default password: <code>guacadmin</code></p><p>After installation, log in and modify as needed.</p><p><strong>The host machine should have at least 1 core, 2GB RAM, and 10GB disk to avoid potential host freezing during setup.</strong></p><p>International:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://raw.githubusercontent.com/spiritLHLS/docker/main/extra_scripts/guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span></span></code></pre></div><p>China:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://ghproxy.com/https://raw.githubusercontent.com/spiritLHLS/docker/main/extra_scripts/guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span></span></code></pre></div>`,73),l=[t];function r(p,i,c,d,h,u){return s(),o("div",null,l)}const g=e(n,[["render",r]]);export{m as __pageData,g as default};
